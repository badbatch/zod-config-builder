import { jest } from '@jest/globals';
import configBuilder from '../__testUtils__/configBuilder.ts';

jest.unstable_mockModule('fs-extra/esm', () => ({
  outputFileSync: jest.fn(),
}));

jest.unstable_mockModule('shelljs', () => ({
  default: {
    echo: jest.fn(),
    exec: jest.fn(),
    exit: jest.fn(),
  },
}));

const { outputFileSync } = jest.mocked(await import('fs-extra/esm'));
const { transformWriteConfig } = await import('./transformWriteConfig.ts');

describe('transformWriteConfig', () => {
  it('should call outputFileSync with the expected file content', async () => {
    await transformWriteConfig(configBuilder.$values(), {
      outputFile: 'config.ts',
    });

    expect(outputFileSync.mock.calls[0]?.[1]).toMatchInlineSnapshot(`
      "/* eslint-disable prettier/prettier, import-x/no-default-export, unicorn/numeric-separators-style, unicorn/no-null */
      /* This file is autogenerated, do not edit directly, your changes will not perist. */

      export default {
        countryCode: "GB",
        countryName: null,
        distanceUnit: "km",
        enabled: true,
        languageCodes: [
          "en"
        ],
        locales: [
          "en_GB"
        ],
        name: undefined,
        pages: {
          contactDetails: {
            path: undefined,
            queryParams: undefined,
            sections: [
              {
                sections: undefined,
                name: "header"
              },
              {
                name: "body",
                sections: [
                  {
                    sections: undefined,
                    name: "main"
                  },
                  {
                    name: "sidebar"
                  }
                ]
              },
              {
                name: "footer"
              }
            ],
            name: "contactDetails"
          },
          personalDetails: {
            name: "personalDetails",
            sections: [
              {
                name: "header"
              },
              {
                name: "body",
                sections: [
                  {
                    name: "main"
                  },
                  {
                    name: "sidebar"
                  }
                ]
              },
              {
                name: "footer"
              }
            ]
          }
        },
        routes: [
          {
            aliases: undefined,
            routes: undefined,
            page: "personalDetails",
            path: "personal-details"
          },
          {
            page: "contactDetails",
            path: "contact-details"
          }
        ],
        timeouts: {
          apollo: 10000
        },
        timezone: "Europe/London"
      } as const;
      "
    `);
  });
});
